# Generated by Django 4.0 on 2021-12-23 18:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('koraveladmin', '0002_delete_authgroup_delete_authgrouppermissions_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('boardtitle', models.CharField(blank=True, db_column='boardTitle', max_length=200, null=True)),
                ('boardcat', models.CharField(db_column='boardCat', max_length=20)),
                ('boardtype', models.CharField(db_column='boardType', max_length=20)),
                ('boardcontent1', models.CharField(blank=True, db_column='boardContent1', max_length=500, null=True)),
                ('boardcontent2', models.CharField(blank=True, db_column='boardContent2', max_length=500, null=True)),
                ('boardreco', models.IntegerField(blank=True, db_column='boardReco', null=True)),
                ('boardviewcount', models.IntegerField(blank=True, db_column='boardViewCount', null=True)),
                ('boardidx', models.AutoField(db_column='boardIdx', primary_key=True, serialize=False)),
                ('boardwriter', models.CharField(blank=True, db_column='boardWriter', max_length=100, null=True)),
                ('boarddate', models.DateTimeField(db_column='boardDate')),
                ('b_fname', models.CharField(blank=True, max_length=100, null=True)),
                ('b_realfname', models.CharField(blank=True, max_length=100, null=True)),
                ('b_fsize', models.IntegerField(blank=True, null=True)),
                ('boardkeyword', models.CharField(blank=True, db_column='boardKeyword', max_length=100, null=True)),
            ],
            options={
                'db_table': 'board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventidx', models.AutoField(db_column='eventIdx', primary_key=True, serialize=False)),
                ('eventname', models.CharField(db_column='eventName', max_length=20)),
                ('eventaddr', models.CharField(db_column='eventAddr', max_length=20)),
                ('eventphone', models.CharField(blank=True, db_column='eventPhone', max_length=20, null=True)),
                ('eventinfo', models.CharField(db_column='eventInfo', max_length=255)),
                ('eventstar', models.FloatField(blank=True, db_column='eventStar', null=True)),
                ('eventx', models.FloatField(db_column='eventX')),
                ('eventy', models.FloatField(db_column='eventY')),
                ('eventinsertsince', models.DateTimeField(db_column='eventInsertSince')),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventreview',
            fields=[
                ('eventidx', models.IntegerField(db_column='eventIdx')),
                ('reviewidx', models.AutoField(db_column='reviewIdx', primary_key=True, serialize=False)),
                ('usrnick', models.CharField(db_column='usrNick', max_length=20)),
                ('reviewcontent', models.CharField(db_column='reviewContent', max_length=500)),
                ('reviewdate', models.DateTimeField(db_column='reviewDate')),
                ('reviewstar', models.FloatField(blank=True, db_column='reviewStar', null=True)),
            ],
            options={
                'db_table': 'eventReview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood', models.CharField(blank=True, max_length=20, null=True)),
                ('theme', models.CharField(blank=True, max_length=20, null=True)),
                ('area', models.CharField(blank=True, max_length=20, null=True)),
                ('place', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reco',
            fields=[
                ('recoidx', models.AutoField(db_column='recoIdx', primary_key=True, serialize=False)),
                ('regionidx', models.IntegerField(blank=True, db_column='regionIdx', null=True)),
                ('boardidx', models.IntegerField(blank=True, db_column='boardIdx', null=True)),
                ('usrid', models.CharField(db_column='usrID', max_length=20)),
                ('recodate', models.DateTimeField(db_column='recoDate')),
            ],
            options={
                'db_table': 'reco',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('regionidx', models.AutoField(db_column='regionIdx', primary_key=True, serialize=False)),
                ('regionname', models.CharField(db_column='regionName', max_length=20)),
                ('regionaddr', models.CharField(blank=True, db_column='regionAddr', max_length=200, null=True)),
                ('regionphone', models.CharField(blank=True, db_column='regionPhone', max_length=20, null=True)),
                ('regioninfo', models.CharField(blank=True, db_column='regionInfo', max_length=3000, null=True)),
                ('regionstar', models.FloatField(blank=True, db_column='regionStar', null=True)),
                ('regionx', models.DecimalField(blank=True, db_column='regionX', decimal_places=9, max_digits=12, null=True)),
                ('regiony', models.DecimalField(blank=True, db_column='regionY', decimal_places=10, max_digits=12, null=True)),
                ('regioninsertsince', models.DateTimeField(db_column='regionInsertSince')),
                ('regionmainimgfile', models.CharField(blank=True, db_column='regionMainImgFile', max_length=20, null=True)),
                ('regiondetailbximg1', models.CharField(blank=True, db_column='regionDetailBxImg1', max_length=100, null=True)),
                ('regiondetailbximg2', models.CharField(blank=True, db_column='regionDetailBxImg2', max_length=100, null=True)),
                ('regiondetailbximg3', models.CharField(blank=True, db_column='regionDetailBxImg3', max_length=100, null=True)),
                ('regiondetailbxthumbimg1', models.CharField(blank=True, db_column='regionDetailBxthumbImg1', max_length=100, null=True)),
                ('regiondetailbxthumbimg2', models.CharField(blank=True, db_column='regionDetailBxthumbImg2', max_length=100, null=True)),
                ('regiondetailbxthumbimg3', models.CharField(blank=True, db_column='regionDetailBxthumbImg3', max_length=100, null=True)),
                ('ocean', models.IntegerField(blank=True, null=True)),
                ('amusement_park', models.IntegerField(blank=True, db_column='Amusement Park', null=True)),
                ('exhibition', models.IntegerField(blank=True, null=True)),
                ('mountain', models.IntegerField(blank=True, null=True)),
                ('active_static', models.IntegerField(blank=True, db_column='Active/static', null=True)),
                ('family', models.IntegerField(blank=True, null=True)),
                ('couple', models.IntegerField(blank=True, null=True)),
                ('kid', models.IntegerField(blank=True, null=True)),
                ('regionaddrcode', models.IntegerField(db_column='regionAddrCode')),
                ('regionsumaddr', models.CharField(db_column='regionSumAddr', max_length=20)),
            ],
            options={
                'db_table': 'region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Regionreview',
            fields=[
                ('regionidx', models.IntegerField(db_column='regionIdx')),
                ('reviewidx', models.AutoField(db_column='reviewIdx', primary_key=True, serialize=False)),
                ('usrnick', models.CharField(db_column='usrNick', max_length=20)),
                ('reviewcontent', models.CharField(db_column='reviewContent', max_length=500)),
                ('reviewdate', models.DateTimeField(db_column='reviewDate')),
                ('reviewstar', models.FloatField(blank=True, db_column='reviewStar', null=True)),
            ],
            options={
                'db_table': 'regionReview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usr',
            fields=[
                ('usridx', models.AutoField(db_column='usrIdx', primary_key=True, serialize=False)),
                ('usremail', models.CharField(blank=True, db_column='usrEmail', max_length=50, null=True, unique=True)),
                ('usrbirth', models.DateField(db_column='usrBirth')),
                ('usrnick', models.CharField(db_column='usrNick', max_length=20)),
                ('usrsince', models.DateTimeField(db_column='usrSince')),
                ('usrpasswd', models.CharField(db_column='usrPasswd', max_length=20)),
                ('usrid', models.CharField(db_column='usrID', max_length=20, unique=True)),
                ('usrdevkey', models.CharField(blank=True, db_column='usrDevKey', max_length=255, null=True)),
                ('usrmood', models.CharField(blank=True, max_length=20, null=True)),
                ('usrtheme', models.CharField(blank=True, max_length=20, null=True)),
                ('usrplace', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'usr',
                'managed': False,
            },
        ),
    ]
